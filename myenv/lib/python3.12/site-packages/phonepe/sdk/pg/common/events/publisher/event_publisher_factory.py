from phonepe.sdk.pg.common.events.event_queue_handler import EventQueueHandler
from phonepe.sdk.pg.common.events.publisher.event_publisher import EventPublisher
from phonepe.sdk.pg.common.events.publisher.queued_event_publisher import QueuedEventPublisher
from phonepe.sdk.pg.common.http_client_modules.base_http_command import BaseHttpCommand


class EventPublisherFactory:
    cached_publisher = None

    def __init__(self, event_sender: BaseHttpCommand):
        self.event_sender = event_sender

    def get_event_publisher(self, should_publish_events: bool):
        if should_publish_events:
            if not EventPublisherFactory.cached_publisher:
                EventPublisherFactory.cached_publisher = QueuedEventPublisher(queue_handler=EventQueueHandler(),
                                                                              event_sender=self.event_sender)
            return EventPublisherFactory.cached_publisher
        return EventPublisher()
