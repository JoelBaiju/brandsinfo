# Generated by Django 5.1.4 on 2025-03-23 08:01

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Auth_OTPs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("otp", models.IntegerField()),
                ("phone", models.CharField(max_length=11)),
                ("name", models.CharField(max_length=60, null=True)),
                ("exists", models.BooleanField(default=False)),
                ("enquiry", models.CharField(max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("city_name", models.CharField(blank=True, max_length=100)),
                ("maped", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Descriptive_cats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cat_name", models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Email_OTPs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("otp", models.IntegerField()),
                ("email", models.CharField(max_length=100)),
                ("bid", models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="General_cats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cat_name", models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Home_Ads",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "banner",
                    models.ImageField(
                        blank=True, default="", null=True, upload_to="Home_Ad_Banners/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Home_Meta_data",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("meta_title", models.CharField(max_length=400, null=True)),
                ("meta_description", models.CharField(max_length=400, null=True)),
                ("meta_keywords", models.CharField(max_length=400, null=True)),
                ("meta_author", models.CharField(max_length=400, null=True)),
                ("page_title", models.CharField(max_length=400, null=True)),
                ("meta_og_title", models.CharField(max_length=400, null=True)),
                ("meta_og_description", models.CharField(max_length=400, null=True)),
                (
                    "meta_og_image",
                    models.ImageField(
                        blank=True, default="", null=True, upload_to="Home_pics/"
                    ),
                ),
                ("meta_og_url", models.CharField(max_length=400, null=True)),
                ("meta_og_type", models.CharField(max_length=400, null=True)),
                ("meta_og_site_name", models.CharField(max_length=400, null=True)),
                ("meta_og_locale", models.CharField(max_length=400, null=True)),
                ("meta_og_image_width", models.CharField(max_length=400, null=True)),
                ("meta_og_image_height", models.CharField(max_length=400, null=True)),
                ("meta_og_image_alt", models.CharField(max_length=400, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Home_Titles",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=70)),
                ("title", models.CharField(max_length=70)),
            ],
        ),
        migrations.CreateModel(
            name="Product_General_category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cat_name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Extended_User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "mobile_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("is_customer", models.BooleanField(default=False)),
                ("is_vendor", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Buisnesses",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "description",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("buisness_type", models.CharField(max_length=50)),
                ("manager_name", models.CharField(blank=True, max_length=100)),
                (
                    "building_name",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("landmark", models.CharField(blank=True, max_length=50, null=True)),
                ("state", models.CharField(max_length=50)),
                ("pincode", models.CharField(blank=True, max_length=10)),
                ("latittude", models.CharField(blank=True, max_length=30)),
                ("longitude", models.CharField(blank=True, max_length=30)),
                ("opens_at", models.TimeField(blank=True, null=True)),
                ("closes_at", models.TimeField(blank=True, null=True)),
                ("since", models.DateField(blank=True, null=True)),
                ("instagram_link", models.CharField(blank=True, max_length=100)),
                ("facebook_link", models.CharField(blank=True, max_length=100)),
                ("x_link", models.CharField(blank=True, max_length=100)),
                ("youtube_link", models.CharField(blank=True, max_length=100)),
                ("web_link", models.CharField(blank=True, max_length=100)),
                ("whatsapp_number", models.CharField(blank=True, max_length=100)),
                ("email", models.EmailField(blank=True, max_length=40)),
                ("incharge_number", models.CharField(blank=True, max_length=15)),
                ("score", models.CharField(default="0", max_length=12)),
                ("image", models.ImageField(default="", upload_to="Profile_pics/")),
                ("sa_rate", models.CharField(default="15", max_length=12)),
                ("no_of_enquiries", models.IntegerField(blank=True, default=0)),
                ("no_of_views", models.IntegerField(blank=True, default=0)),
                ("verified", models.BooleanField(default=False)),
                ("assured", models.BooleanField(default=False)),
                ("rating", models.FloatField(default=0)),
                ("total_no_of_ratings", models.IntegerField(default=0)),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.city",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Buisness_pics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(default="", upload_to="Photo_gallery/")),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.buisnesses",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Buisness_Offers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("offer", models.IntegerField(default=0)),
                ("is_percent", models.BooleanField(default=False)),
                ("is_flat", models.BooleanField(default=False)),
                ("minimum_bill_amount", models.IntegerField(blank=True)),
                ("valid_upto", models.DateField(blank=True)),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.buisnesses",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BuisnessTracker",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("time_spend", models.CharField(default="0", max_length=50)),
                ("date", models.DateField(auto_now=True)),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.buisnesses",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Buisness_Descriptive_cats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("maped", models.BooleanField(default=False)),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.buisnesses",
                    ),
                ),
                (
                    "dcat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.descriptive_cats",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Enquiries",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("mobile_number", models.CharField(max_length=15)),
                ("message", models.CharField(blank=True, max_length=500, null=True)),
                ("date", models.DateField(auto_now=True)),
                ("time", models.TimeField(auto_now=True)),
                ("is_read", models.BooleanField(default=False)),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.buisnesses",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="descriptive_cats",
            name="general_cat",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="usershome.general_cats"
            ),
        ),
        migrations.CreateModel(
            name="Buisness_General_cats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.buisnesses",
                    ),
                ),
                (
                    "gcat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.general_cats",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Home_Popular_General_Cats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, default="", null=True, upload_to="Home_pics/"
                    ),
                ),
                (
                    "name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.general_cats",
                    ),
                ),
                (
                    "title",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.home_titles",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Home_Popular_Des_Cats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.descriptive_cats",
                    ),
                ),
                (
                    "title",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.home_titles",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Home_Popular_Cities",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, default="", null=True, upload_to="Home_pics/"
                    ),
                ),
                (
                    "name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="usershome.city"
                    ),
                ),
                (
                    "title",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.home_titles",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Liked_Buisnesses_Group",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=70)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="business_groups",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Locality",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("locality_name", models.CharField(blank=True, max_length=100)),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="usershome.city"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="buisnesses",
            name="locality",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="usershome.locality"
            ),
        ),
        migrations.CreateModel(
            name="Popular_General_Cats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "general_cat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.general_cats",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Product_Sub_category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cat_name", models.CharField(max_length=50)),
                (
                    "general_cat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.product_general_category",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Home_Popular_Product_Cats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, default="", null=True, upload_to="Home_pics/"
                    ),
                ),
                (
                    "title",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.home_titles",
                    ),
                ),
                (
                    "name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.product_sub_category",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Products",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=200)),
                ("price", models.CharField(blank=True, max_length=20)),
                ("description", models.CharField(blank=True, max_length=200)),
                ("searched", models.IntegerField(blank=True, default=0)),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.buisnesses",
                    ),
                ),
                (
                    "sub_cat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.product_sub_category",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Product_pics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(default="", upload_to="Product_pics/")),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.products",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Product_linked_sub_category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.product_sub_category",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.products",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Reviews_Ratings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("review", models.CharField(default="", max_length=500, null=True)),
                ("rating", models.IntegerField(default=0)),
                ("date", models.DateField(auto_now=True)),
                ("time", models.TimeField(auto_now=True)),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.buisnesses",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Review_pics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(default="", upload_to="Review_pics/")),
                (
                    "review",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.reviews_ratings",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Service_Cats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cat_name", models.CharField(max_length=50)),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.buisnesses",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Services",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=70)),
                ("price", models.CharField(max_length=30)),
                (
                    "image",
                    models.ImageField(
                        blank=True, default="", null=True, upload_to="Sevices_pics/"
                    ),
                ),
                ("searched", models.IntegerField(blank=True, default=0)),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.buisnesses",
                    ),
                ),
                (
                    "cat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.service_cats",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Sitemap_Links",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("link", models.CharField(max_length=300, null=True)),
                ("share_link", models.CharField(max_length=100, null=True)),
                ("single_buisness", models.BooleanField(default=False)),
                ("cc_combination", models.BooleanField(default=False)),
                ("meta_title", models.CharField(max_length=400, null=True)),
                ("meta_description", models.CharField(max_length=400, null=True)),
                ("meta_keywords", models.CharField(max_length=400, null=True)),
                ("meta_author", models.CharField(max_length=400, null=True)),
                ("meta_og_title", models.CharField(max_length=400, null=True)),
                ("meta_og_description", models.CharField(max_length=400, null=True)),
                (
                    "meta_og_image",
                    models.ImageField(
                        blank=True, default="", null=True, upload_to="Home_pics/"
                    ),
                ),
                ("meta_og_url", models.CharField(max_length=400, null=True)),
                ("meta_og_site_name", models.CharField(max_length=400, null=True)),
                ("page_title", models.CharField(max_length=400, null=True)),
                ("last_mod", models.DateField(auto_now=True)),
                ("change_freq", models.CharField(max_length=50, null=True)),
                ("priority", models.FloatField(default=0.5)),
                (
                    "buisness",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sitemap_link",
                        to="usershome.buisnesses",
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.city",
                    ),
                ),
                (
                    "dcat",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.descriptive_cats",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Liked_Buisnesses",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="liked_by_groups",
                        to="usershome.buisnesses",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="liked_buisnesses",
                        to="usershome.liked_buisnesses_group",
                    ),
                ),
            ],
            options={
                "verbose_name": "Liked Buisness",
                "verbose_name_plural": "Liked Buisnesses",
                "unique_together": {("buisness", "group")},
            },
        ),
    ]
