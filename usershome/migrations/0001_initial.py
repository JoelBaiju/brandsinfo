# Generated by Django 5.1.4 on 2025-04-14 09:33

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Auth_OTPs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("otp", models.IntegerField()),
                ("phone", models.CharField(max_length=11)),
                ("name", models.CharField(max_length=60, null=True)),
                ("exists", models.BooleanField(default=False)),
                ("enquiry", models.CharField(max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("city_name", models.CharField(blank=True, max_length=100)),
                ("maped", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Descriptive_cats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cat_name", models.CharField(blank=True, max_length=100)),
                ("maped", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Email_OTPs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("otp", models.IntegerField()),
                ("email", models.CharField(max_length=100)),
                ("bid", models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="General_cats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cat_name", models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Home_Ads",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "banner",
                    models.ImageField(
                        blank=True, default="", null=True, upload_to="Home_Ad_Banners/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Home_Meta_data",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("meta_title", models.CharField(max_length=400, null=True)),
                ("meta_description", models.CharField(max_length=400, null=True)),
                ("meta_keywords", models.CharField(max_length=400, null=True)),
                ("meta_author", models.CharField(max_length=400, null=True)),
                ("page_title", models.CharField(max_length=400, null=True)),
                ("meta_og_title", models.CharField(max_length=400, null=True)),
                ("meta_og_description", models.CharField(max_length=400, null=True)),
                (
                    "meta_og_image",
                    models.ImageField(
                        blank=True, default="", null=True, upload_to="Home_pics/"
                    ),
                ),
                ("meta_og_url", models.CharField(max_length=400, null=True)),
                ("meta_og_type", models.CharField(max_length=400, null=True)),
                ("meta_og_site_name", models.CharField(max_length=400, null=True)),
                ("meta_og_locale", models.CharField(max_length=400, null=True)),
                ("meta_og_image_width", models.CharField(max_length=400, null=True)),
                ("meta_og_image_height", models.CharField(max_length=400, null=True)),
                ("meta_og_image_alt", models.CharField(max_length=400, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Home_Titles",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=70)),
                ("title", models.CharField(max_length=70)),
            ],
        ),
        migrations.CreateModel(
            name="Keywords",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("keyword", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="Plan_Varients",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("duration", models.CharField(max_length=50)),
                ("price", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Plans",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("plan_name", models.CharField(max_length=100)),
                ("profile_visit", models.BooleanField(default=False)),
                ("average_time_spend", models.BooleanField(default=False)),
                ("chat", models.BooleanField(default=False)),
                ("search_priority_1", models.BooleanField(default=False)),
                ("image_gallery", models.BooleanField(default=False)),
                ("google_map", models.BooleanField(default=False)),
                ("whatsapp_chat", models.BooleanField(default=False)),
                ("profile_view_count", models.BooleanField(default=False)),
                ("sa_rate", models.BooleanField(default=False)),
                ("keywords", models.BooleanField(default=False)),
                ("search_priority_2", models.BooleanField(default=False)),
                ("video_gallery", models.BooleanField(default=False)),
                ("bi_verification", models.BooleanField(default=False)),
                ("products_and_service_visibility", models.BooleanField(default=False)),
                (
                    "social_media_paid_promotion_in_bi_youtube",
                    models.BooleanField(default=False),
                ),
                ("most_searhed_p_s", models.BooleanField(default=False)),
                ("search_priority_3", models.BooleanField(default=False)),
                ("todays_offer", models.BooleanField(default=False)),
                ("bi_assured", models.BooleanField(default=False)),
                ("bi_certification", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Product_General_category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cat_name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Extended_User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "mobile_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("is_customer", models.BooleanField(default=False)),
                ("is_vendor", models.BooleanField(default=False)),
                ("is_admin", models.BooleanField(default=False)),
                ("device_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Buisnesses",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("plan_start_date", models.DateField(auto_now_add=True, null=True)),
                ("search_priority", models.IntegerField(default=0)),
                ("name", models.CharField(max_length=100)),
                (
                    "description",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("buisness_type", models.CharField(max_length=50)),
                ("manager_name", models.CharField(blank=True, max_length=100)),
                (
                    "building_name",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("landmark", models.CharField(blank=True, max_length=50, null=True)),
                ("state", models.CharField(max_length=50)),
                ("pincode", models.CharField(blank=True, max_length=10)),
                ("latittude", models.CharField(blank=True, max_length=30)),
                ("longitude", models.CharField(blank=True, max_length=30)),
                ("opens_at", models.TimeField(blank=True, null=True)),
                ("closes_at", models.TimeField(blank=True, null=True)),
                ("since", models.DateField(blank=True, null=True)),
                ("instagram_link", models.CharField(blank=True, max_length=100)),
                ("facebook_link", models.CharField(blank=True, max_length=100)),
                ("x_link", models.CharField(blank=True, max_length=100)),
                ("youtube_link", models.CharField(blank=True, max_length=100)),
                ("web_link", models.CharField(blank=True, max_length=100)),
                ("whatsapp_number", models.CharField(blank=True, max_length=100)),
                ("email", models.EmailField(blank=True, max_length=40)),
                ("incharge_number", models.CharField(blank=True, max_length=15)),
                ("maped", models.BooleanField(default=False)),
                ("score", models.CharField(default="0", max_length=12)),
                ("image", models.ImageField(default="", upload_to="Profile_pics/")),
                ("searched", models.IntegerField(default=0)),
                ("no_of_enquiries", models.IntegerField(blank=True, default=0)),
                ("no_of_views", models.IntegerField(blank=True, default=0)),
                ("verified", models.BooleanField(default=False)),
                ("assured", models.BooleanField(default=False)),
                ("rating", models.FloatField(default=0)),
                ("total_no_of_ratings", models.IntegerField(default=0)),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.city",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Buisness_Videos",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("video_file", models.FileField(upload_to="Buisness_Videos/")),
                ("is_converted", models.BooleanField(default=False)),
                ("hls_path", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="buisness_videos",
                        to="usershome.buisnesses",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Buisness_pics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(default="", upload_to="Photo_gallery/")),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.buisnesses",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Buisness_Offers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("offer", models.IntegerField(default=0)),
                ("is_percent", models.BooleanField(default=False)),
                ("is_flat", models.BooleanField(default=False)),
                ("minimum_bill_amount", models.IntegerField(blank=True)),
                ("valid_upto", models.DateField(blank=True)),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.buisnesses",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BuisnessTracker",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("time_spend", models.CharField(default="0", max_length=50)),
                ("date", models.DateField(auto_now=True)),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.buisnesses",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BuisnessVisitTracker",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(auto_now_add=True)),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.buisnesses",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Buisness_Descriptive_cats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.buisnesses",
                    ),
                ),
                (
                    "dcat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.descriptive_cats",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Enquiries",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("mobile_number", models.CharField(max_length=15)),
                ("message", models.CharField(blank=True, max_length=500, null=True)),
                ("date", models.DateField(auto_now=True)),
                ("time", models.TimeField(auto_now=True)),
                ("is_read", models.BooleanField(default=False)),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.buisnesses",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="descriptive_cats",
            name="general_cat",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="usershome.general_cats"
            ),
        ),
        migrations.CreateModel(
            name="Buisness_General_cats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.buisnesses",
                    ),
                ),
                (
                    "gcat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.general_cats",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Home_Popular_General_Cats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, default="", null=True, upload_to="Home_pics/"
                    ),
                ),
                (
                    "name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.general_cats",
                    ),
                ),
                (
                    "title",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.home_titles",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Home_Popular_Des_Cats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.descriptive_cats",
                    ),
                ),
                (
                    "title",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.home_titles",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Home_Popular_Cities",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, default="", null=True, upload_to="Home_pics/"
                    ),
                ),
                (
                    "name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="usershome.city"
                    ),
                ),
                (
                    "title",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.home_titles",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Buisness_keywords",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.buisnesses",
                    ),
                ),
                (
                    "keyword",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.keywords",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Liked_Buisnesses_Group",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=70)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="business_groups",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Locality",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("locality_name", models.CharField(blank=True, max_length=100)),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="usershome.city"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="buisnesses",
            name="locality",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="usershome.locality"
            ),
        ),
        migrations.AddField(
            model_name="buisnesses",
            name="plan_variant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="usershome.plan_varients",
            ),
        ),
        migrations.AddField(
            model_name="plan_varients",
            name="plan",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="varients",
                to="usershome.plans",
            ),
        ),
        migrations.CreateModel(
            name="PhonePeTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order_id",
                    models.CharField(
                        help_text="Unique transaction identifier from PhonePe",
                        max_length=100,
                        unique=True,
                        verbose_name="Transaction ID",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Transaction amount in INR",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                        verbose_name="Amount (₹)",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("INITIATED", "Initiated"),
                            ("SUCCESS", "Success"),
                            ("FAILED", "Failed"),
                            ("EXPIRED", "Expired"),
                            ("REFUNDED", "Refunded"),
                            ("PARTIALLY_REFUNDED", "Partially Refunded"),
                        ],
                        default="PENDING",
                        max_length=20,
                        verbose_name="Payment Status",
                    ),
                ),
                (
                    "phonepe_response",
                    models.JSONField(
                        blank=True,
                        help_text="Initial response from PhonePe API",
                        null=True,
                        verbose_name="PhonePe Response",
                    ),
                ),
                (
                    "phonepe_callback",
                    models.JSONField(
                        blank=True,
                        help_text="Data received from PhonePe callback",
                        null=True,
                        verbose_name="Callback Data",
                    ),
                ),
                (
                    "payment_url",
                    models.URLField(
                        blank=True,
                        help_text="URL to redirect user for payment",
                        max_length=500,
                        null=True,
                        verbose_name="Payment URL",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Mark as False for soft deletion",
                        verbose_name="Is Active",
                    ),
                ),
                (
                    "payment_completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Payment Completed At"
                    ),
                ),
                (
                    "business",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="usershome.buisnesses",
                        verbose_name="Business",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="phonepe_transactions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "plan_variant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transactions",
                        to="usershome.plan_varients",
                        verbose_name="Plan Variant",
                    ),
                ),
                (
                    "plan",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transactions",
                        to="usershome.plans",
                        verbose_name="Subscription Plan",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="buisnesses",
            name="plan",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="usershome.plans",
            ),
        ),
        migrations.CreateModel(
            name="Popular_General_Cats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "general_cat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.general_cats",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Product_Sub_category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cat_name", models.CharField(max_length=50)),
                (
                    "general_cat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.product_general_category",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Home_Popular_Product_Cats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, default="", null=True, upload_to="Home_pics/"
                    ),
                ),
                (
                    "title",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.home_titles",
                    ),
                ),
                (
                    "name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.product_sub_category",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Products",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=200)),
                ("price", models.CharField(blank=True, max_length=20)),
                ("description", models.CharField(blank=True, max_length=200)),
                ("searched", models.IntegerField(blank=True, default=0)),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="usershome.buisnesses",
                    ),
                ),
                (
                    "sub_cat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.product_sub_category",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Product_pics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(default="", upload_to="Product_pics/")),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.products",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Product_linked_sub_category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.product_sub_category",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.products",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Reviews_Ratings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("review", models.CharField(default="", max_length=500, null=True)),
                ("rating", models.IntegerField(default=0)),
                ("date", models.DateField(auto_now=True)),
                ("time", models.TimeField(auto_now=True)),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.buisnesses",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Review_pics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(default="", upload_to="Review_pics/")),
                (
                    "review",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.reviews_ratings",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Service_Cats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cat_name", models.CharField(max_length=50)),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.buisnesses",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Services",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=70)),
                ("price", models.CharField(max_length=30)),
                (
                    "description",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("searched", models.IntegerField(blank=True, default=0)),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="services",
                        to="usershome.buisnesses",
                    ),
                ),
                (
                    "cat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.service_cats",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Service_pics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(default="", upload_to="Sevices_pics/")),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.services",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Liked_Buisnesses",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "buisness",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="liked_by_groups",
                        to="usershome.buisnesses",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="liked_buisnesses",
                        to="usershome.liked_buisnesses_group",
                    ),
                ),
            ],
            options={
                "verbose_name": "Liked Buisness",
                "verbose_name_plural": "Liked Buisnesses",
                "unique_together": {("buisness", "group")},
            },
        ),
        migrations.CreateModel(
            name="Sitemap_Links",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("link", models.CharField(max_length=600, null=True)),
                ("share_link", models.CharField(max_length=100, null=True)),
                ("single_buisness", models.BooleanField(default=False)),
                ("cc_combination", models.BooleanField(default=False)),
                (
                    "city_name",
                    models.CharField(db_index=True, max_length=100, null=True),
                ),
                (
                    "dcat_name",
                    models.CharField(db_index=True, max_length=100, null=True),
                ),
                ("meta_title", models.CharField(max_length=400, null=True)),
                ("meta_description", models.CharField(max_length=400, null=True)),
                ("meta_keywords", models.CharField(max_length=400, null=True)),
                ("meta_author", models.CharField(max_length=400, null=True)),
                ("meta_og_title", models.CharField(max_length=400, null=True)),
                ("meta_og_description", models.CharField(max_length=400, null=True)),
                (
                    "meta_og_image",
                    models.ImageField(
                        blank=True, default="", null=True, upload_to="Home_pics/"
                    ),
                ),
                ("meta_og_url", models.CharField(max_length=400, null=True)),
                ("meta_og_site_name", models.CharField(max_length=400, null=True)),
                ("page_title", models.CharField(max_length=400, null=True)),
                ("last_mod", models.DateField(auto_now=True)),
                ("change_freq", models.CharField(max_length=50, null=True)),
                ("priority", models.FloatField(default=0.5)),
                (
                    "buisness",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sitemap_link",
                        to="usershome.buisnesses",
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.city",
                    ),
                ),
                (
                    "dcat",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usershome.descriptive_cats",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["city_name", "dcat_name"],
                        name="usershome_s_city_na_73bfa7_idx",
                    )
                ],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("city", "dcat"), name="unique_city_dcat"
                    )
                ],
            },
        ),
    ]
