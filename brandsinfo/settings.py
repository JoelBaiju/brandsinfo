"""
Django settings for brandsinfo project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from datetime import timedelta
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

import logging

logging.getLogger('apscheduler').setLevel(logging.CRITICAL + 1)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-v)1y*)3ghutj1goo#r1yu*69l8$%3pr6#+8&4*3a(oy7mwq2pk"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition



INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'rest_framework',
    'django_elasticsearch_dsl',
    'communications',
    'corsheaders',
    'usershome.apps.UsershomeConfig',
    'django_celery_beat',
    'analytics',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    'corsheaders.middleware.CorsMiddleware',
    
    # 'analytics.middlewares.RequestTrackingMiddleware',

    # "usershome.middleware.PlanCheckMiddleware",


]


ROOT_URLCONF = "brandsinfo.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "brandsinfo.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases




# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/


STATIC_URL = "static/"
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


AUTH_USER_MODEL = 'usershome.Extended_User'
CSRF_TRUSTED_ORIGINS = [
    'https://api.brandsinfo.in',
]


CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    'https://f509rzm8-3000.inc1.devtunnels.ms',
    'https://api.brandsinfo.in',

]
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True





REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',

    ),
   

}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(hours=1), 
    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),
    'BLACKLIST_AFTER_ROTATION': True,
}



MEDIA_URL = '/media/'  # URL path used to serve media files
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # Directory where media files are stored
MAIN_CATEGORY_IMAGES_DIR = os.path.join(MEDIA_ROOT, 'Main_category_images')







EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'brandsinfoguide@gmail.com'  # Your Gmail account
EMAIL_HOST_PASSWORD = 'cpav vbda pjjk lmxs'  # App Password or Gmail password
DEFAULT_FROM_EMAIL = 'brandsinfoguide@gmail.com'  # Default from email (can be your Gmail or another verified email)






INSTALLED_APPS += ['channels']
ASGI_APPLICATION = "brandsinfo.asgi.application"






# dev

GEMINI_API_KEYS=[
                    'AIzaSyDwPLJew4URfzgMdQ43BEG-A7ldVs83_2w',    #gemini key in careindia
                    'AIzaSyA5FqJy6E9Oypk0rp4FRezaFwvs7cd9dPc',    #icare key in icareindia

                    'AIzaSyAFMQMVZhQAsOBfTq36fdsBNnAJ0jl4nmo',    #gemini key in anjali
                    'AIzaSyATUTGsCNyIH4VW4bTfMRdoyiG--5KHV8o',  #brandsinfo key in anjali
                 
                 
                    'AIzaSyB2JQaUzhAB6fFlOgFB9DSmp8UAnBWOjvs',  # brandsinfo key in brandsinfo 
                
            
                    'AIzaSyDbM8NSNv49EX63BqC1alukSm0eS_8rtJ0', #gemini key in fightclub                
                    'AIzaSyDmKDJSC2i7b_OST495c9HDnNIyJ4DPgGQ' #brandsinfo key in fightclub
                ]


COHERE_API_KEYS=[
                    'qY786lt1yZbf5XwvJHv8wiNwJ2zydJRBnsa5SfZ1',  #brandsinfo.test@gmail.com

                    'lOm2YckbpL1KoXZ1x5rqtixgtIOK4Ysx863YEPM0' ,  #nikhilrakeshh@gmail.com 

                    'QyUeM7WyVCa1AaFyLek1O4GL70kz4OKk0Rj7jeQp' , #nikhilappu112@gmail.com 

                    'AO1euOkpjFl09wnJR4UqgzSXdbmIaAJj2SiRMXbX'  , #srngoldanddiamonds@gmail.com 
]

SARVAM_API_KEY="sk_11n2zhzc_QxnqQNpwtrVf4Xy56hYBnY0r"




FIREBASE_API_KEY = 'AIzaSyBF52Ah0ERtBRalBWwAOgEMPUhjKrlpVvo'


OPENAI_API_KEY = "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"


# DEV = True
DEV = False
    



# dev
if DEV:

    ffmpeg_executable = r'C:\Users\91703\ffmpeg\ffmpeg-2025-03-31-git-35c091f4b7-essentials_build\bin\ffmpeg.exe'

    FRONTEND_BASE_URL_FOR_SM = 'https://45jfqx2q-3000.inc1.devtunnels.ms'
    BACKEND_BASE_URL_FOR_SM = 'https://mq459llx-8000.inc1.devtunnels.ms'
    BACKEND_BASE_URL_FOR_SM_SECURE = 'https://mq459llx-8000.inc1.devtunnels.ms'
    FAST2SMS_API_KEY='TNuYH9rIb5d7cM6UhWglVmB2vQEieXFKD314RJsStPCLGk08fAOnKw9RlTU30emkyMSD8uXqtfbJgcvW'


    ELASTICSEARCH_DSL = {
        'default': {
            'hosts': ['http://elastic:Z0NLsQ1r6OEnfGdTh2qr@localhost:9200/'],
        },
    }
    
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'brandsinfo',   
            'USER': 'root',       
            'PASSWORD': 'root@123',  
            'HOST': 'localhost',    
            'PORT': '3306',         
        }
    }
    
    redisPort = 6380
    
    

else :
    
    ffmpeg_executable = "/usr/bin/ffmpeg"


    FRONTEND_BASE_URL_FOR_SM = 'https://brandsinfo.in'
    BACKEND_BASE_URL_FOR_SM = 'https://api.brandsinfo.in'
    BACKEND_BASE_URL_FOR_SM_SECURE = 'https://api.brandsinfo.in'
    FAST2SMS_API_KEY='TNuYH9rIb5d7cM6UhWglVmB2vQEieXFKD314RJsStPCLGk08fAOnKw9RlTU30emkyMSD8uXqtfbJgcvW'

    ELASTICSEARCH_DSL = {
        'default': {
            'hosts': ['https://localhost:9200'],  # Use HTTPS for Elasticsearch 8.x
            'http_auth': ('elastic', 'i1XcRSql5nr9hCHx2aDd'),  # Separate credentials
            'verify_certs': False,  # Disable only for development/testing
            'timeout': 30,  # Optional: Set request timeout
        },
    }
        

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'brandsinfo',   
            'USER': 'root',       
            'PASSWORD': 'Root@1234',  
            'HOST': 'localhost',    
            'PORT': '3306',         
        }
    }
    redisPort = 6379



CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", redisPort)],  # Redis Server
        },
    },
}


CELERY_BROKER_URL = f"redis://127.0.0.1:{redisPort}/0"
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'



from celery.schedules import crontab

CELERY_BEAT_SCHEDULE = {
    'chek-Expiries': {
        'task': 'userhome.tasks.Expiry_Check',
        'schedule': crontab(hour=0 , minute=0)
    },
    'update-counts': {
        'task': 'analysis.tasks.record_daily_count',
        'schedule': crontab(hour=0,minute=0)
    },
    'schedule-auto-reviews': {
        'task': 'usershome.Reviews.reviewer.check_and_schedule_reviews',
        'schedule': crontab(hour=0,minute=0) 

    },
}

        # 'schedule': crontab(minute='*/5') 


PHONEPE_MERCHANT_ID = "TEST_M22HLXACRTTPK_25040"
PHONEPE_SALT_KEY = " "
PHONEPE_SALT_INDEX = "your_salt_index"
PHONEPE_BASE_URL = "https://api-preprod.phonepe.com/apis/pg-sandbox"  # Use prod URL for live
PHONEPE_REDIRECT_URL = "https://yourdomain.com/payment/callback/"



ffmpeg_path = r'C:\Users\91703\ffmpeg\ffmpeg-2025-03-31-git-35c091f4b7-essentials_build\bin\ffmpeg.exe'
os.environ['PATH'] = ffmpeg_path + ';' + os.environ['PATH']





AUTO_REVIEW = True
RATING_DISTRIBUTION = {
    "tier_1": [3, 4],  # Lean toward 3.5 avg
    "tier_2": [3, 5],  # Lean toward 4.0 avg
    "tier_3": [4, 5],  # Lean toward 4.5 avg
}



FILTER_AI_PRIORITY = [
    "gpt",        # Fallback
    "cohere",     # Highest priority
    "sarvam"      # Final fallback
]


# settings.py

AI_METADATA_PRIORITY = [
    "gemini",
    "cohere",
    "sarvam"
]


REVIEW_AI_PRIORITY = [
    "gpt",     # First priority
    "cohere",  # Fallback
    # "sarvam" # Add if needed later
]



AUTH_BYPASS_NUMBER = "8891268078"
AUTH_BYPASS_OTP = "254869"


